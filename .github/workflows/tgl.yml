# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  workflow_dispatch:
      inputs:
          testsuite:
            description: 'test suite name'
            required: true
            default: 'PasswordEncryptDecrypt'
          gitRepo:
             description: 'this is git repo'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Install Google Chrome # Using shell script to install Google Chrome
      run: 
          chmod +x ./TGLAutomation/scripts/InstallChrome.sh
          ./TGLAutomation/scripts/InstallChrome.sh
    - name: Grant execute permission for gradlew
      run: chmod +x TGLAutomation/gradlew
    - name: Build with Gradle
      run: ./TGLAutomation/gradlew build
    - name: run tests
      run: |  
          echo "Regression Suite: ${{github.event.inputs.testsuite }}"
          cd ./TGLAutomation  
          ./gradlew test --info # Run our tests using Gradle
          
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()    # run this step even if previous step failed
      with:
          name: Run Tests            # Name of the check run which will be created
          path: TGLAutomation/build/test-results/test/TEST-*.xml    # Path to test results
          reporter: java-junit
