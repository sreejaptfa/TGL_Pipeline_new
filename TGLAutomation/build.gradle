/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.4/userguide/java_library_plugin.html
 */

plugins {
	id "org.sonarqube" version "2.5"
	id "java-library"
	id "maven-publish"
}

group='org.tfa'
version='1.0.0-SNAPSHOT'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()      
    maven { url archivaReleaseUrl }
    maven { url archivaSnapshotUrl }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8



test {

    useTestNG() {
        dependsOn cleanTest
        useDefaultListeners = true   
        suites "src/test/resources/testng_suites/RegressionSuite.xml"    
        systemProperty "downloadlocation", System.getProperty("downloadlocation")
    }
}


sonarqube {
	properties {
		property "sonar.projectName", "TFACoreSelenium"
		property "sonar.projectKey", "org.tfa:TFACoreSelenium"
		property "sonar.host.url", "https://sonarqube.tfanet.org"
		property "sonar.exclusions", "src/**/*.properties,src/**/*.yaml"
		property "sonar.junit.reportsPath", "build/test-results"
	}
}


dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.8.1'
    // https://mvnrepository.com/artifact/org.testng/testng
    compile group: 'org.testng', name: 'testng', version: '6.13.1'
    
    //TFA Repository
    compile group: 'org.tfa', name: 'TFASeleniumCore', version: '+'
   
     // https://mvnrepository.com/artifact/org.apache.poi/poi
    compile group: 'org.apache.poi', name: 'poi', version: '3.17'
    
    // https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.17'
    
    // https://mvnrepository.com/artifact/com.aventstack/extentreports
    compile group: 'com.aventstack', name: 'extentreports', version: '3.0.1'
    
    // https://mvnrepository.com/artifact/log4j/log4j
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
    
    // https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-server
    compile group: 'org.seleniumhq.selenium', name: 'selenium-server', version: '3.8.1'
    
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'
    
    // https://mvnrepository.com/artifact/org.json/json
    compile group: 'org.json', name: 'json', version: '20180130'
    // https://mvnrepository.com/artifact/com.jayway.jsonpath/json-path
    compile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'
    
    // https://mvnrepository.com/artifact/net.minidev/json-smart
    compile group: 'net.minidev', name: 'json-smart', version: '2.3'
    
   // https://mvnrepository.com/artifact/com.jayway.restassured/rest-assured
    compile group: 'com.jayway.restassured', name: 'rest-assured', version: '2.9.0'
    
	
   // https://mvnrepository.com/artifact/com.jayway.jsonpath/json-path
	compile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.0.0'

	// Adding this dependency to make explicitwait.until work - NS
	compile group: 'com.google.guava', name:'guava', version:'21.0'
	
	// https://mvnrepository.com/artifact/javax.mail/mail
	compile group: 'javax.mail', name: 'mail', version: '1.5.0-b01'
    
}


publishing {
    publications {
        maven(MavenPublication) {
            artifact("${project.jar.destinationDir}/${project.jar.archiveName}") {
                classifier "${project.hasProperty('classifier') ? project.classifier : 'dev' }"
                extension  'jar'
            }
        }
    }

    repositories {
        maven {
            url project.hasProperty('classifier') ? (project.classifier.equals('prod') ? archivaReleaseUrl : archivaSnapshotUrl) : archivaSnapshotUrl
            credentials {
                username archivaUsername
                password archivaPassword
            }
        }
    }
}